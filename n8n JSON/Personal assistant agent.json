{
  "name": "Personal assistant agent",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {
          "download": false
        }
      },
      "id": "0c402bdc-7fa2-4fa1-96d6-f02853cfdaa1",
      "name": "Telegram Message Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -192,
        32
      ],
      "webhookId": "55acc711-c248-4ac9-b6cd-e295c2d33f4b",
      "credentials": {
        "telegramApi": {
          "id": "NEMZBWb8IpIZHKJC",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Message Trigger').first().json.message.chat.id }}",
        "contextWindowLength": 10
      },
      "id": "30bef40d-efbe-4920-acad-ce9a42c0061c",
      "name": "Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        944,
        144
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Message Trigger').first().json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1072,
        -32
      ],
      "id": "7dea5c17-bfdb-4874-918b-a6583298efa2",
      "name": "Reply in Telegram",
      "webhookId": "b96b7a41-9806-455f-b72e-00aa638eda71",
      "credentials": {
        "telegramApi": {
          "id": "NEMZBWb8IpIZHKJC",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        256,
        -64
      ],
      "id": "66219c83-6371-4cc6-ad43-57cee44f52da",
      "name": "Get a file",
      "webhookId": "e0769871-efe3-49da-81a5-2f88a6fdd33f",
      "credentials": {
        "telegramApi": {
          "id": "NEMZBWb8IpIZHKJC",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2b538077-d3d3-4713-b973-68748313ff97",
              "leftValue": "={{ $json.message.voice }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        32,
        32
      ],
      "id": "3a1a7f7f-f122-438d-a0f2-1e80d1072dba",
      "name": "Check if Audio file"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "eb912219-2436-4f04-8ffc-c1c20eb07344",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        256,
        128
      ],
      "id": "2e9b0ca3-2a0f-441d-89a0-28365c5ba3ef",
      "name": "Set field"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text || $json.message.text }}",
        "options": {
          "systemMessage": "=# Telegram Personal AI Assistant System Prompt\n\nYou are a helpful personal AI assistant that communicates with users through Telegram.\n\n## Your Capabilities\n\nYou can help users with:\n- **General conversation** - Answer questions and provide information\n\n## Communication Style\n\n### Response Format\n- Keep responses conversational and friendly\n- Use appropriate length for Telegram (not too long)\n- Be helpful and informative\n- Match the user's tone and communication style\n\n### Voice Message Handling\n- When users send voice messages, respond naturally as if they spoke to you directly\n- Don't mention that their message was transcribed\n- Respond in a conversational way that flows naturally\n\n\n## Context Awareness\n\n- Remember the current date and time: **Today is {{ $now.format('cccc') }} the {{ $now.format('yyyy-MM-dd HH:mm') }}**\n- Use this information to provide relevant, timely responses\n- Reference \"today\", \"tomorrow\", \"this week\" appropriately\n\n## Important Guidelines\n\n- Maintain conversation context using the memory system\n- Ask clarifying questions when requests are ambiguous\n- Respect privacy - only access information when relevant to the request\n- If you can't help with something, suggest alternatives or redirect to your available capabilities\n\nRemember: You're a personal assistant, so be personable, helpful, and focused on making the user's day easier and more organized.\n\nToday is {{ $now.format('cccc') }} the {{ $now.format('yyyy-MM-dd HH:mm') }}."
        }
      },
      "id": "f958d2f6-6602-4443-bfae-ef628af09b84",
      "name": "Assistant Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        736,
        -32
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://agent-eu2.openai.azure.com/openai/deployments/whisper/audio/transcriptions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "api-version",
              "value": "2024-02-01"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        464,
        -16
      ],
      "id": "b42941aa-2382-4f64-bf8a-994414c17ef9",
      "name": "HTTP Request",
      "credentials": {
        "httpBearerAuth": {
          "id": "aX05oDCbmTRiZwT4",
          "name": "Azure"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-5-chat",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        688,
        144
      ],
      "id": "9490cc48-75a1-41d2-936f-5f5e03e630b2",
      "name": "Azure OpenAI Chat Model",
      "credentials": {
        "azureOpenAiApi": {
          "id": "c1r0n77HyUjpKOR0",
          "name": "Azure Open AI account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Personal assistant agent with voice transcription\n\nThis is a simple, but effective AI assistant that is connected via telegram as a bot. Users can write messages with it, and receive feedback. It also accepts voice messages, thanks to azure openAI transcription. Basically it's an agent connected to telegram as a telegram bot.\n\n## How does it work?\n\nThis model waits for any upcoming messages from telegram chat, then checks if it audio or text. If it's text, then it goes to the agent, who generate the response and send feedback to user. If the message is voice, it is first transcripted using https module with Azure openAI transcription endpoint. After getting the result, agent receive the output and procced with answer.",
        "height": 432,
        "width": 512
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -784,
        -128
      ],
      "typeVersion": 1,
      "id": "75cf527e-b913-435d-a2c7-6067d67192f8",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Telegram trigger",
        "height": 432,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -272,
        -128
      ],
      "typeVersion": 1,
      "id": "136ce0fe-c057-425c-94ad-5cbed867d963",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Checking the message type",
        "height": 432,
        "width": 448,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -32,
        -128
      ],
      "typeVersion": 1,
      "id": "492cca3d-8739-4056-b465-11d9fb89a51b",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Transcriptions",
        "height": 432,
        "width": 208,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        416,
        -128
      ],
      "typeVersion": 1,
      "id": "4a2939ed-eabf-4b7d-8f7d-0afc6af360d1",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Generating response and sending feedback",
        "height": 432,
        "width": 640,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        624,
        -128
      ],
      "typeVersion": 1,
      "id": "81f682a8-8d4b-46c7-ad29-ffdefd923a98",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Requirements\n\n* Azure OpenAI endpoint for transcription and credentials\n* Telegram credentials",
        "height": 144,
        "width": 512,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -784,
        -272
      ],
      "typeVersion": 1,
      "id": "6cd4b28e-ce18-4522-8a66-387189b4bf9b",
      "name": "Sticky Note5"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Message Trigger": {
      "main": [
        [
          {
            "node": "Check if Audio file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Memory": {
      "ai_memory": [
        [
          {
            "node": "Assistant Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Audio file": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set field",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set field": {
      "main": [
        [
          {
            "node": "Assistant Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assistant Agent": {
      "main": [
        [
          {
            "node": "Reply in Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Assistant Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Azure OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Assistant Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "M4Ldk3BxQQPc7uHR"
  },
  "versionId": "ebaa9f1d-df7d-4db9-b7bb-2f4f11a8132c",
  "meta": {
    "templateId": "voice_assistant_agent_with_telegram",
    "templateCredsSetupCompleted": true,
    "instanceId": "f1e8e899ff46369f9c32ee0519c314890a667daa91c593fcbd7438d3d8aac985"
  },
  "id": "M4Ldk3BxQQPc7uHR",
  "tags": [
    {
      "createdAt": "2025-09-22T16:04:28.426Z",
      "updatedAt": "2025-09-22T16:45:17.738Z",
      "id": "daYNaZDqfLF2KZbF",
      "name": "Completed"
    }
  ]
}