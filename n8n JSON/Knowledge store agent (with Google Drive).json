{
  "name": "Knowledge store agent (with Google Drive)",
  "nodes": [
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        -192,
        288
      ],
      "id": "708d9e4e-6566-4b18-86b8-8301bf0c72dd",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -432,
        32
      ],
      "id": "604a4e5e-5ccc-4db1-94dc-673711bea6af",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "Lw6WnMEdUS3TXQ3S",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=# Knowledge Store Agent System Prompt\n\nYou are a data analysis agent that retrieves and analyzes information from a vector store to answer user questions.\n\n## Your Task\n\n1. **Search the vector store** - Use similarity search to find relevant documents and data\n2. **Analyze the results** - Understand what the retrieved data tells you\n3. **Provide clear answers** - Give helpful responses based on the data you found\n\n## How to Work with Vector Data\n\n### Search Process\n- Use the user's question to search for similar content\n- Retrieve multiple relevant chunks of data\n- Look for patterns and connections across the results\n- Consider both exact matches and conceptually similar information\n\n### Analysis Guidelines\n- Read through all retrieved documents carefully\n- Identify key information that answers the user's question\n- Note any conflicting or incomplete information\n- Look for trends, patterns, or insights in the data\n\n### Response Format\n- Start with a direct answer to the user's question\n- Support your answer with specific information from the data\n- Cite which documents or sources your information comes from\n- Be clear about what you found and what you didn't find\n\n## Response Guidelines\n\n### When You Find Good Data\n- Give a confident, detailed answer\n- Include relevant quotes or data points\n- Explain how the information relates to their question\n- Offer additional insights if available\n\n### When Data is Limited\n- Be honest about what information is available\n- Share what you did find, even if partial\n- Suggest related questions you could help with\n- Don't make up information not in the data\n\n### When No Relevant Data is Found\n- Clearly state that you couldn't find relevant information\n- Suggest alternative ways to phrase the question\n- Offer to search for related topics\n\n## Key Principles\n\n- Always base answers on the retrieved data\n- Be transparent about your sources\n- Admit when information is unclear or missing\n- Help users understand what the data shows\n- Ask clarifying questions if the user's request is vague\n\nRemember: Your strength is finding and explaining information that already exists in the vector store. Focus on being accurate and helpful with the data you can retrieve."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        624,
        32
      ],
      "id": "99f9315f-4f3d-48d9-a6f4-8c519b249eba",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        304,
        32
      ],
      "id": "bedf3615-c8b0-4fa8-afc5-574bca1003d4",
      "name": "When chat message received",
      "webhookId": "ddf4ea5b-94fc-4fbf-b856-95d39a04eb59"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        656,
        192
      ],
      "id": "167d097a-69f6-4f1b-a741-8c8936adb3d2",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1kX9rj8miQuju-yBW2ndIfaFwHVwI1Wh9",
          "mode": "list",
          "cachedResultName": "Folder testowy",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1kX9rj8miQuju-yBW2ndIfaFwHVwI1Wh9"
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -640,
        32
      ],
      "id": "0cddc21e-a75f-48df-b168-8e288be12469",
      "name": "File uploaded",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "Lw6WnMEdUS3TXQ3S",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Embeddings\n\nThe Insert and Retrieve operation use the same embedding node.\n\nThis is to ensure that they are using the **exact same embeddings and settings**.\n\nDifferent embeddings might not work at all, or have unintended consequences.\n",
        "height": 240,
        "width": 320,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -736,
        192
      ],
      "typeVersion": 1,
      "id": "2fa9684d-f20a-4262-9b8b-81babb2fecc5",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "mode": "insert",
        "memoryKey": {
          "__rl": true,
          "value": "vector_store_key",
          "mode": "list",
          "cachedResultName": "vector_store_key"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1.3,
      "position": [
        -240,
        32
      ],
      "id": "64d17551-1637-4a53-a3e0-db45894c12a6",
      "name": "Insert documents"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Use this tool to retrieve any information required.",
        "memoryKey": {
          "__rl": true,
          "value": "vector_store_key",
          "mode": "list",
          "cachedResultName": "vector_store_key"
        },
        "topK": 10
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1.3,
      "position": [
        688,
        304
      ],
      "id": "4f8a4a45-28a4-4684-b838-66011cc6a4a5",
      "name": "Retrieve documents"
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsAzureOpenAi",
      "typeVersion": 1,
      "position": [
        96,
        288
      ],
      "id": "bf430671-5350-41e6-af88-78960dcc8e34",
      "name": "Embeddings Azure OpenAI",
      "credentials": {
        "azureOpenAiApi": {
          "id": "c1r0n77HyUjpKOR0",
          "name": "Azure Open AI account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-5-chat",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        448,
        192
      ],
      "id": "9b70b604-1a65-41bd-ab81-18884521005b",
      "name": "Azure OpenAI Chat Model",
      "credentials": {
        "azureOpenAiApi": {
          "id": "c1r0n77HyUjpKOR0",
          "name": "Azure Open AI account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Knowledge store agent (with google drive) (test version)\n\nThis is a test project, as a template to use for knowledge store agents. Its similar to the support agent with Qdrant, however here I use the n8n local vector stores.\n\n# How does it work?\n\nWorks the same as Qdrant project, however instead of getting files from form, this agent gets informations from files upon creating in specific folder on google drive. Then he based on that interacts with user via chat.\n**Disclaimer** : When n8n restarts, the vector store data is reset, thats why it named as a template/test project.",
        "height": 464,
        "width": 496
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1232,
        -32
      ],
      "typeVersion": 1,
      "id": "032b13b5-8a1d-4124-ba33-7069505e6178",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Checking and downloading to vector store section",
        "height": 464,
        "width": 864,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -736,
        -32
      ],
      "typeVersion": 1,
      "id": "0ef448d4-fd0a-43d4-b599-53c2ec80dd87",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Interaction with chat section",
        "height": 464,
        "width": 864,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        128,
        -32
      ],
      "typeVersion": 1,
      "id": "dd3032e4-075e-453d-a431-d1843d840083",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Requirements + additional info\n\n* Google drive credentials\n* Azure openAI embeddings and chat model credentials\n\nIf you want to implement working vector databases, like Qdrant, all you need is to replace the insert document module and retrieve documents module with specific replacement",
        "height": 208,
        "width": 496,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1232,
        -240
      ],
      "typeVersion": 1,
      "id": "e6e6beef-0079-4a2d-847a-3edca3755676",
      "name": "Sticky Note4"
    }
  ],
  "pinData": {},
  "connections": {
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert documents",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Insert documents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "File uploaded": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve documents": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Azure OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Insert documents",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Retrieve documents",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Azure OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0584c7d8-e289-485a-b7e6-103745356960",
  "meta": {
    "templateId": "knowledge_store_agent_with_google_drive",
    "templateCredsSetupCompleted": true,
    "instanceId": "f1e8e899ff46369f9c32ee0519c314890a667daa91c593fcbd7438d3d8aac985"
  },
  "id": "uChf2s2e4CxohYFs",
  "tags": [
    {
      "createdAt": "2025-09-22T16:04:28.426Z",
      "updatedAt": "2025-09-22T16:45:17.738Z",
      "id": "daYNaZDqfLF2KZbF",
      "name": "Completed"
    },
    {
      "name": "test/template",
      "id": "krUQALx5UZYItTCa",
      "createdAt": "2025-09-23T15:52:53.530Z",
      "updatedAt": "2025-09-23T15:52:53.530Z"
    }
  ]
}